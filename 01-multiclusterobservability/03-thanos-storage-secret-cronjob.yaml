apiVersion: batch/v1
kind: Job
metadata:
  name: thanos-storage-secret-cronjob
  namespace: open-cluster-management-observability
spec:
  parallelism: 1
  completions: 1
  activeDeadlineSeconds: 60
  backofflimit: 5
  template:
    metadata:
      name: thanos-storage-secret-cronjob
    spec:
      containers:
      - name: thanos-storage-secret-provisioner
        image: registry.redhat.io/openshift4/ose-cli:v4.11
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        - -c
        - |
          export BUCKETNAME=`oc get obc metrics-bucket -n open-cluster-management-observability -o jsonpath={.spec.bucketName}`
          export AWS_ACCESS_KEY_ID=`oc get secret metrics-bucket -n open-cluster-management-observability -o go-template='{{.data.AWS_ACCESS_KEY_ID|base64decode}}'`
          export AWS_SECRET_ACCESS_KEY=`oc get secret metrics-bucket -n open-cluster-management-observability -o go-template='{{.data.AWS_SECRET_ACCESS_KEY|base64decode}}'`
          export DOCKER_CONFIG_JSON=`oc extract secret/pull-secret -n openshift-config --to=-`

          oc create secret generic multiclusterhub-operator-pull-secret \
            -n open-cluster-management-observability \
            --from-literal=.dockerconfigjson="$DOCKER_CONFIG_JSON" \
            --type=kubernetes.io/dockerconfigjson

          cat <<EOF | oc apply -f -
          apiVersion: v1
          kind: Secret
          metadata:
            name: thanos-object-storage
            namespace: open-cluster-management-observability
          type: Opaque
          stringData:
            thanos.yaml: |
              type: s3
              config:
                bucket: $BUCKETNAME
                endpoint: s3.openshift-storage.svc:443
                insecure: false
                access_key: $AWS_ACCESS_KEY_ID
                secret_key: $AWS_SECRET_ACCESS_KEY
                http_config:
                  insecure_skip_verify: true
          EOF
      restartPolicy: OnFailure
      serviceAccountName: thanos-secret-creator-sa
